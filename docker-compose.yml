services:
  web:
    build: .
    restart: on-failure
    command:  > 
      sh -c "dockerize -wait tcp://db:3306 -timeout 60s &&
            python manage.py migrate &&
            python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
    ports:
        - 8000:8000
    depends_on:
      - db
      - redis

  db:
    image: mysql:8
    restart: always
    environment:
      MYSQL_DATABASE: 'database_name'
      MYSQL_USER: 'mysql_username'
      MYSQL_PASSWORD: 'mysql_password'
      MYSQL_ROOT_PASSWORD: 'mysql_secret_password'
    volumes:
      - my-db:/var/lib/mysql

  redis:
    image: redis:7.2-alpine
    restart: always

  celery:
    build: .
    restart: on-failure
    command: celery -A config worker --loglevel=info
    depends_on:
      - redis

volumes:
  my-db:
